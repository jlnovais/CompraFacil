//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace WSTeste.CompraFacilWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CompraFacilWSSoap", Namespace="http://www.comprafacil.pt/")]
    public partial class CompraFacilWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReferenceMBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReferenceMB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getReferencePSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReferencePS2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CompraFacilWS() {
            this.Url = global::WSTeste.Properties.Settings.Default.WSTeste_CompraFacilWS_CompraFacilWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getInfoCompletedEventHandler getInfoCompleted;
        
        /// <remarks/>
        public event getInfoReferenceCompletedEventHandler getInfoReferenceCompleted;
        
        /// <remarks/>
        public event getReferenceMBCompletedEventHandler getReferenceMBCompleted;
        
        /// <remarks/>
        public event getReferenceMB2CompletedEventHandler getReferenceMB2Completed;
        
        /// <remarks/>
        public event getReferencePSCompletedEventHandler getReferencePSCompleted;
        
        /// <remarks/>
        public event getReferencePS2CompletedEventHandler getReferencePS2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/GetReferencesInfo", RequestElementName="GetReferencesInfo", RequestNamespace="http://www.comprafacil.pt/", ResponseElementName="GetReferencesInfoResponse", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetReferencesInfoResult")]
        public bool getInfo(string username, string password, string dateStartStr, string dataEndStr, string type, out string referencesList, out string IDsList, out string error) {
            object[] results = this.Invoke("getInfo", new object[] {
                        username,
                        password,
                        dateStartStr,
                        dataEndStr,
                        type});
            referencesList = ((string)(results[1]));
            IDsList = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoAsync(string username, string password, string dateStartStr, string dataEndStr, string type) {
            this.getInfoAsync(username, password, dateStartStr, dataEndStr, type, null);
        }
        
        /// <remarks/>
        public void getInfoAsync(string username, string password, string dateStartStr, string dataEndStr, string type, object userState) {
            if ((this.getInfoOperationCompleted == null)) {
                this.getInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoOperationCompleted);
            }
            this.InvokeAsync("getInfo", new object[] {
                        username,
                        password,
                        dateStartStr,
                        dataEndStr,
                        type}, this.getInfoOperationCompleted, userState);
        }
        
        private void OngetInfoOperationCompleted(object arg) {
            if ((this.getInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoCompleted(this, new getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/getInfoReference", RequestNamespace="http://www.comprafacil.pt/", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getInfoReference(string reference, string username, string password, out bool paid, out string status, out string lastPaymentDate, out int totalPayments, out string error) {
            object[] results = this.Invoke("getInfoReference", new object[] {
                        reference,
                        username,
                        password});
            paid = ((bool)(results[1]));
            status = ((string)(results[2]));
            lastPaymentDate = ((string)(results[3]));
            totalPayments = ((int)(results[4]));
            error = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoReferenceAsync(string reference, string username, string password) {
            this.getInfoReferenceAsync(reference, username, password, null);
        }
        
        /// <remarks/>
        public void getInfoReferenceAsync(string reference, string username, string password, object userState) {
            if ((this.getInfoReferenceOperationCompleted == null)) {
                this.getInfoReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoReferenceOperationCompleted);
            }
            this.InvokeAsync("getInfoReference", new object[] {
                        reference,
                        username,
                        password}, this.getInfoReferenceOperationCompleted, userState);
        }
        
        private void OngetInfoReferenceOperationCompleted(object arg) {
            if ((this.getInfoReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoReferenceCompleted(this, new getInfoReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/getReferenceMB", RequestNamespace="http://www.comprafacil.pt/", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getReferenceMB(
                    string origin, 
                    string username, 
                    string password, 
                    decimal amount, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer, 
                    out string reference, 
                    out string entity, 
                    out decimal amountOut, 
                    out string error) {
            object[] results = this.Invoke("getReferenceMB", new object[] {
                        origin,
                        username,
                        password,
                        amount,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        timeLimitDays,
                        sendEmailBuyer});
            reference = ((string)(results[1]));
            entity = ((string)(results[2]));
            amountOut = ((decimal)(results[3]));
            error = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getReferenceMBAsync(
                    string origin, 
                    string username, 
                    string password, 
                    decimal amount, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer) {
            this.getReferenceMBAsync(origin, username, password, amount, additionalInfo, name, address, postCode, city, NIC, externalReference, contactPhone, email, IDUserBackoffice, timeLimitDays, sendEmailBuyer, null);
        }
        
        /// <remarks/>
        public void getReferenceMBAsync(
                    string origin, 
                    string username, 
                    string password, 
                    decimal amount, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer, 
                    object userState) {
            if ((this.getReferenceMBOperationCompleted == null)) {
                this.getReferenceMBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReferenceMBOperationCompleted);
            }
            this.InvokeAsync("getReferenceMB", new object[] {
                        origin,
                        username,
                        password,
                        amount,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        timeLimitDays,
                        sendEmailBuyer}, this.getReferenceMBOperationCompleted, userState);
        }
        
        private void OngetReferenceMBOperationCompleted(object arg) {
            if ((this.getReferenceMBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReferenceMBCompleted(this, new getReferenceMBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/getReferenceMB2", RequestNamespace="http://www.comprafacil.pt/", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getReferenceMB2(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer, 
                    out string reference, 
                    out string entity, 
                    out decimal amountOut, 
                    out string error) {
            object[] results = this.Invoke("getReferenceMB2", new object[] {
                        origin,
                        productID,
                        username,
                        password,
                        quantity,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        timeLimitDays,
                        sendEmailBuyer});
            reference = ((string)(results[1]));
            entity = ((string)(results[2]));
            amountOut = ((decimal)(results[3]));
            error = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getReferenceMB2Async(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer) {
            this.getReferenceMB2Async(origin, productID, username, password, quantity, additionalInfo, name, address, postCode, city, NIC, externalReference, contactPhone, email, IDUserBackoffice, timeLimitDays, sendEmailBuyer, null);
        }
        
        /// <remarks/>
        public void getReferenceMB2Async(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    int timeLimitDays, 
                    bool sendEmailBuyer, 
                    object userState) {
            if ((this.getReferenceMB2OperationCompleted == null)) {
                this.getReferenceMB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReferenceMB2OperationCompleted);
            }
            this.InvokeAsync("getReferenceMB2", new object[] {
                        origin,
                        productID,
                        username,
                        password,
                        quantity,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        timeLimitDays,
                        sendEmailBuyer}, this.getReferenceMB2OperationCompleted, userState);
        }
        
        private void OngetReferenceMB2OperationCompleted(object arg) {
            if ((this.getReferenceMB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReferenceMB2Completed(this, new getReferenceMB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/getReferencePS", RequestNamespace="http://www.comprafacil.pt/", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getReferencePS(
                    string origin, 
                    string username, 
                    string password, 
                    decimal amount, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    bool sendEmailBuyer, 
                    out string reference, 
                    out string paymentDeadline, 
                    out decimal amountOut, 
                    out string error) {
            object[] results = this.Invoke("getReferencePS", new object[] {
                        origin,
                        username,
                        password,
                        amount,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        sendEmailBuyer});
            reference = ((string)(results[1]));
            paymentDeadline = ((string)(results[2]));
            amountOut = ((decimal)(results[3]));
            error = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getReferencePSAsync(string origin, string username, string password, decimal amount, string additionalInfo, string name, string address, string postCode, string city, string NIC, string externalReference, string contactPhone, string email, int IDUserBackoffice, bool sendEmailBuyer) {
            this.getReferencePSAsync(origin, username, password, amount, additionalInfo, name, address, postCode, city, NIC, externalReference, contactPhone, email, IDUserBackoffice, sendEmailBuyer, null);
        }
        
        /// <remarks/>
        public void getReferencePSAsync(
                    string origin, 
                    string username, 
                    string password, 
                    decimal amount, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    bool sendEmailBuyer, 
                    object userState) {
            if ((this.getReferencePSOperationCompleted == null)) {
                this.getReferencePSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReferencePSOperationCompleted);
            }
            this.InvokeAsync("getReferencePS", new object[] {
                        origin,
                        username,
                        password,
                        amount,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        sendEmailBuyer}, this.getReferencePSOperationCompleted, userState);
        }
        
        private void OngetReferencePSOperationCompleted(object arg) {
            if ((this.getReferencePSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReferencePSCompleted(this, new getReferencePSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.comprafacil.pt/getReferencePS2", RequestNamespace="http://www.comprafacil.pt/", ResponseNamespace="http://www.comprafacil.pt/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getReferencePS2(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    bool sendEmailBuyer, 
                    out string reference, 
                    out string paymentDeadline, 
                    out decimal valor, 
                    out string error) {
            object[] results = this.Invoke("getReferencePS2", new object[] {
                        origin,
                        productID,
                        username,
                        password,
                        quantity,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        sendEmailBuyer});
            reference = ((string)(results[1]));
            paymentDeadline = ((string)(results[2]));
            valor = ((decimal)(results[3]));
            error = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getReferencePS2Async(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    bool sendEmailBuyer) {
            this.getReferencePS2Async(origin, productID, username, password, quantity, additionalInfo, name, address, postCode, city, NIC, externalReference, contactPhone, email, IDUserBackoffice, sendEmailBuyer, null);
        }
        
        /// <remarks/>
        public void getReferencePS2Async(
                    string origin, 
                    string productID, 
                    string username, 
                    string password, 
                    int quantity, 
                    string additionalInfo, 
                    string name, 
                    string address, 
                    string postCode, 
                    string city, 
                    string NIC, 
                    string externalReference, 
                    string contactPhone, 
                    string email, 
                    int IDUserBackoffice, 
                    bool sendEmailBuyer, 
                    object userState) {
            if ((this.getReferencePS2OperationCompleted == null)) {
                this.getReferencePS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReferencePS2OperationCompleted);
            }
            this.InvokeAsync("getReferencePS2", new object[] {
                        origin,
                        productID,
                        username,
                        password,
                        quantity,
                        additionalInfo,
                        name,
                        address,
                        postCode,
                        city,
                        NIC,
                        externalReference,
                        contactPhone,
                        email,
                        IDUserBackoffice,
                        sendEmailBuyer}, this.getReferencePS2OperationCompleted, userState);
        }
        
        private void OngetReferencePS2OperationCompleted(object arg) {
            if ((this.getReferencePS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReferencePS2Completed(this, new getReferencePS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getInfoCompletedEventHandler(object sender, getInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string referencesList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string IDsList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getInfoReferenceCompletedEventHandler(object sender, getInfoReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool paid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string lastPaymentDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int totalPayments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getReferenceMBCompletedEventHandler(object sender, getReferenceMBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReferenceMBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReferenceMBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string entity {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal amountOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getReferenceMB2CompletedEventHandler(object sender, getReferenceMB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReferenceMB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReferenceMB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string entity {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal amountOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getReferencePSCompletedEventHandler(object sender, getReferencePSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReferencePSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReferencePSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string paymentDeadline {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal amountOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getReferencePS2CompletedEventHandler(object sender, getReferencePS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReferencePS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReferencePS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string paymentDeadline {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal valor {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
}

#pragma warning restore 1591